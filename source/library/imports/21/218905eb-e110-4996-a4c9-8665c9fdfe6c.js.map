{"version":3,"sources":["..\\..\\..\\..\\assets\\scripts/assets\\scripts\\Star.js"],"names":["cc","_decorator","ccclass","property","NewScript","game","enabled","node","opacity","randomPosition","Math","round","random","spriteList","length","getComponent","Sprite","spriteFrame","init","playerPos","player","getCenterPos","dist","pDistance","position","pos","getPosition","split","currentStar","type","score","op","gainScore","setHeartIcon","lifeCount","despawnStar","dt","getPlayerDistance","pickRadius","onPicked","posx","x","posy","y","max","groundY","step","setPosition","p","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAC4BA,GAAGC;IAAxBC,yBAAAA;IAASC,0BAAAA;;IAGKC,YADpBF;;;;;;;;;;;;;;qTAQGG,OAAO;;;;;iCAEG;AACN,iBAAKC,OAAL,GAAe,KAAf;AACH;;AAED;;;;6BACMD,MAAM;AACR,iBAAKA,IAAL,GAAYA,IAAZ;AACA,iBAAKC,OAAL,GAAe,IAAf;AACA,iBAAKC,IAAL,CAAUC,OAAV,GAAoB,GAApB;AACA,gBAAIC,iBAAiBC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,KAAgB,SAA3B,CAArB;AACAH,6BAAiBA,iBAAiB,KAAKI,UAAL,CAAgBC,MAAlD;AACA,iBAAKP,IAAL,CAAUQ,YAAV,CAAuBf,GAAGgB,MAA1B,EAAkCC,WAAlC,GAAgD,KAAKJ,UAAL,CAAgBJ,cAAhB,CAAhD;AACH;;;8BAEMJ,MAAM;AACT,iBAAKa,IAAL,CAAUb,IAAV;AACH;;;4CAEoB;AACjB,gBAAIc,YAAY,KAAKd,IAAL,CAAUe,MAAV,CAAiBC,YAAjB,EAAhB;AACA,gBAAIC,OAAOtB,GAAGuB,SAAH,CAAa,KAAKhB,IAAL,CAAUiB,QAAvB,EAAiCL,SAAjC,CAAX;AACA,mBAAOG,IAAP;AACH;;;mCAEW;AACR,gBAAIG,MAAM,KAAKlB,IAAL,CAAUmB,WAAV,EAAV;;AAEA,gBAAIC,QAAQ,KAAKtB,IAAL,CAAUuB,WAAV,CAAsBb,YAAtB,CAAmCf,GAAGgB,MAAtC,EAA8CC,WAA9C,CAA0D,OAA1D,EAAmEU,KAAnE,CAAyE,GAAzE,CAAZ;AACA,gBAAIE,OAAOF,MAAM,CAAN,CAAX;AACA;AACA,gBAAIG,QAAQ,GAAZ;AACA,gBAAIC,KAAK,CAAT;AACA,gBAAIF,QAAQ,GAAZ,EAAiBE,KAAK,CAAC,CAAN;AACjB,iBAAK1B,IAAL,CAAU2B,SAAV,CAAoB,KAAK3B,IAAL,CAAUuB,WAAV,CAAsBF,WAAtB,EAApB,EAAyDK,EAAzD,EAA6DD,KAA7D;AACA,iBAAKzB,IAAL,CAAU4B,YAAV;;AAEA,gBAAI,KAAK5B,IAAL,CAAU6B,SAAV,IAAuB,CAA3B,EAA8B;AAC9B,gBAAIH,KAAK,CAAT,EAAY;;AAEZ,iBAAK1B,IAAL,CAAU8B,WAAV,CAAsB,KAAK5B,IAA3B;AACH;;AAED;;;;+BACQ6B,IAAI;AACR,gBAAI,KAAKC,iBAAL,KAA2B,KAAKC,UAApC,EAAgD;AAC5C,qBAAKC,QAAL;AACA;AACH;;AAED,gBAAIC,OAAO,KAAKjC,IAAL,CAAUiB,QAAV,CAAmBiB,CAA9B;AACA,gBAAIC,OAAO,KAAKnC,IAAL,CAAUiB,QAAV,CAAmBmB,CAA9B;;AAEAD,mBAAOhC,KAAKkC,GAAL,CAAS,KAAKvC,IAAL,CAAUwC,OAAnB,EAA4BH,OAAO,KAAKrC,IAAL,CAAUyC,IAA7C,CAAP;;AAEA,iBAAKvC,IAAL,CAAUwC,WAAV,CAAsB/C,GAAGgD,CAAH,CAAKR,IAAL,EAAWE,IAAX,CAAtB;AACH;;;;EAhEkC1C,GAAGiD,uFACrC9C;;;eACY;;+EAEZA;;;eACY;;;;kBALIC","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["\r\nconst {ccclass, property} = cc._decorator;\r\n\r\n@ccclass\r\nexport default class NewScript extends cc.Component {\r\n    @property\r\n    pickRadius = 0;\r\n\r\n    @property\r\n    spriteList = [];\r\n\r\n    game = null;\r\n\r\n    onLoad () {\r\n        this.enabled = false;\r\n    }\r\n\r\n    // use this for initialization\r\n    init (game) {\r\n        this.game = game;\r\n        this.enabled = true;\r\n        this.node.opacity = 255;\r\n        var randomPosition = Math.round(Math.random() * 123456789);\r\n        randomPosition = randomPosition % this.spriteList.length;\r\n        this.node.getComponent(cc.Sprite).spriteFrame = this.spriteList[randomPosition];\r\n    }\r\n\r\n    reuse (game) {\r\n        this.init(game);\r\n    }\r\n\r\n    getPlayerDistance () {\r\n        var playerPos = this.game.player.getCenterPos();\r\n        var dist = cc.pDistance(this.node.position, playerPos);\r\n        return dist;\r\n    }\r\n\r\n    onPicked () {\r\n        var pos = this.node.getPosition();\r\n        \r\n        let split = this.game.currentStar.getComponent(cc.Sprite).spriteFrame['_name'].split('_');\r\n        let type = split[0];\r\n        // let score = split[2];\r\n        let score = '1';        \r\n        let op = 1;\r\n        if (type == '0') op = -1;\r\n        this.game.gainScore(this.game.currentStar.getPosition(), op, score);\r\n        this.game.setHeartIcon();\r\n        \r\n        if (this.game.lifeCount <= 0) return;\r\n        if (op < 1) return;\r\n\r\n        this.game.despawnStar(this.node);\r\n    }\r\n\r\n    // called every frame\r\n    update (dt) {\r\n        if (this.getPlayerDistance() < this.pickRadius) {\r\n            this.onPicked();\r\n            return;\r\n        }\r\n        \r\n        var posx = this.node.position.x;\r\n        var posy = this.node.position.y;\r\n        \r\n        posy = Math.max(this.game.groundY, posy - this.game.step);\r\n        \r\n        this.node.setPosition(cc.p(posx, posy));\r\n    }\r\n}\r\n"]}